import vk_api
import random
from vk_api.longpoll import VkLongPoll, VkEventType
from vk_api.keyboard import VkKeyboard, VkKeyboardColor
from pymongo import MongoClient
from configvk import vkapi_my, tasks, commands_meny, db_connect

session = vk_api.VkApi(token=vkapi_my)

cluster = MongoClient(db_connect)
db = cluster["ecodb"]
collection = db["vkcolldb"]

# def ready(user_id):
#     keyboard = VkKeyboard()
#     keyboard.add_button("–°—Ç–∞—Ä—Ç", VkKeyboardColor.POSITIVE)
#     post = {
#             "user_id": user_id,
#             "message": "–ü—Ä–∏–≤–µ—Ç!!",
#             "keyboard": keyboard,
#             "random_id": 0
#         }
#     session.method("messages.send", post)


def send_message(user_id, message, keyboard=None):
    post = {
        "user_id": user_id,
        "message": message,
        "random_id": 0
    }

    if keyboard is not None:
        post["keyboard"] = keyboard.get_keyboard()
    else:
        post = post

    session.method("messages.send", post)


def main_meny():
    keyboard = VkKeyboard()
    keyboard.add_button("–ü—Ä–æ—Ñ–∏–ª—å", VkKeyboardColor.POSITIVE)
    keyboard.add_button("–ü—Ä–æ—Ñ—Ç–µ—Å—Ç", VkKeyboardColor.NEGATIVE)
    keyboard.add_line()
    keyboard.add_openlink_button("–í—Å—Ç—É–ø–∏—Ç—å", r"http://sfu-prof.com/home/vstupit-v-ppos-sfu")
    keyboard.add_button("–ü–æ–º–æ—â—å", VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_openlink_button("–°–∞–π—Ç –ü–ü–û–° –°–§–£", r"http://sfu-prof.com/")
    send_message(user_id, "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ—Ç–∫—Ä—ã—Ç–æ", keyboard)


def help_meny():
    keyboard = VkKeyboard()
    keyboard.add_button("–°–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è")
    keyboard.add_button("–ü–æ–≤—ã—à–µ–Ω–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è")
    keyboard.add_line()
    keyboard.add_button("–ú–∞—Ç–µ—Ä–∏–∞–ª—å–Ω–∞—è –ø–æ–º–æ—â—å")
    keyboard.add_button("–ü–æ–ª—É—á–µ–Ω–∏—è —Ç–∞–ª–æ–Ω–∞ –Ω–∞ –∫–∞—à—É")
    keyboard.add_line()
    keyboard.add_button("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", VkKeyboardColor.POSITIVE)
    send_message(user_id, "–ú–µ–Ω—é —Å –ø–æ–º–æ—â—å—é –æ—Ç–∫—Ä—ã—Ç–∞", keyboard)


def game_meny():
    keyboard = VkKeyboard()
    keyboard.add_button("4")
    keyboard.add_button("6")
    keyboard.add_button("8")
    keyboard.add_button("10")
    keyboard.add_line()
    keyboard.add_button("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", VkKeyboardColor.POSITIVE)
    send_message(user_id, "–í—ã–±–µ—Ä–∏—Ç–µ –∫–æ–ª-–≤–æ –≤–æ–ø—Ä–æ—Å–æ–≤:", keyboard)


def game_pro(user_id, chis):
    keyboard = VkKeyboard()
    keyboard.add_button("1")
    keyboard.add_button("2")
    keyboard.add_button("3")
    keyboard.add_button("4")
    keyboard.add_line()
    keyboard.add_button("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", VkKeyboardColor.POSITIVE)
    send_message(user_id, "–ü—Ä–æ—Ñ—Ç–µ—Å—Ç:", keyboard)

    game_tasks = []
    x = 0
    while x != chis:
        random1 = random.randint(0, len(tasks) - 1)
        random_task = tasks[random1]
        if random_task not in game_tasks:
            game_tasks.append(random_task)
            x += 1
    a = True
    profiki = 0
    true = 0
    for x in range(0, len(game_tasks)):
        if a:
            send_message(user_id, f"{game_tasks[x][0]}\n")
            for event in VkLongPoll(session).listen():
                if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                    text = event.text.lower()
                    if text == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                        a = False
                        break
                    try:
                        if int(text) == game_tasks[x][1]:
                            send_message(user_id, f"–í–µ—Ä–Ω–æ!\n")
                            profiki += 2
                            true += 1
                            break
                        elif int(text) != game_tasks[x][1]:
                            send_message(user_id, f"–ù–µ–≤–µ—Ä–Ω–æ\n–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –ø–æ–¥ –Ω–æ–º–µ—Ä–æ–º {game_tasks[x][1]}\n")
                            profiki -= 1
                            break
                        else:
                            a = False
                            break
                    except:
                        a = False
                        break
        else:
            break
    collection.update_one({"_id": user_id}, {"$inc": {"balance": profiki}})
    send_message(user_id, f"–í—ã –æ—Ç–≤–µ—Ç–∏–ª–∏ –≤–µ—Ä–Ω–æ –Ω–∞ {true} –∏–∑ {chis} –≤–æ–ø—Ä–æ—Å–æ–≤!\n–ü–æ–ª—É—á–µ–Ω–æ {profiki} –ø—Ä–æ—Ñ–±–∞–ª–ª–æ–≤")


def social_meny():
    keyboard = VkKeyboard()
    keyboard.add_button("–ö—Ç–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å", VkKeyboardColor.POSITIVE)
    keyboard.add_line()
    keyboard.add_button("–ê–ª–≥–æ—Ä–∏—Ç–º –ø–æ–ª—É—á–µ–Ω–∏—è", VkKeyboardColor.SECONDARY)
    keyboard.add_line()
    keyboard.add_button("–†–∞–∑–º–µ—Ä", VkKeyboardColor.PRIMARY)
    keyboard.add_button("–ü–ì–°–°", VkKeyboardColor.PRIMARY)
    keyboard.add_line()
    keyboard.add_button("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", VkKeyboardColor.POSITIVE)
    send_message(user_id, "–ú–µ–Ω—é —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å—Ç–∏–ø–µ–Ω–¥–∏–∏ –æ—Ç–∫—Ä—ã—Ç–æ", keyboard)


for event in VkLongPoll(session).listen():
    if event.type == VkEventType.MESSAGE_NEW and event.to_me:
        text = event.text.lower()
        user_id = event.user_id
        print(f"–û–æ–æ, —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç {user_id}: {text}!")

        # if __name__ == "__main__":
        #     print("ready...")
        #     ready(user_id)

        data1 = {
            "_id": user_id,
            "balance": 0
        }

        if collection.count_documents({"_id": user_id}) == 0:
            collection.insert_one(data1)
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–π–¥–∏ {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
        else:
            print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–π–¥–∏ {user_id} —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

        if text == "—Å—Ç–∞—Ä—Ç":

            if collection.count_documents({"_id": user_id}) == 0:
                collection.insert_one(data1)
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–π–¥–∏ {user_id} –¥–æ–±–∞–≤–ª–µ–Ω –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö")
            else:
                print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∞–π–¥–∏ {user_id} —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")

            main_meny()

        glmen = ["–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "m", "–º–µ–Ω—é"]
        if text in glmen:
            main_meny()

        if text == "–ø—Ä–æ—Ñ–∏–ª—å":
            balans_member = collection.find_one({'_id': user_id})['balance']
            if 1 < balans_member < 5:
                balans_member = str(balans_member) + " –ø—Ä–æ—Ñ–±–∞–ª–ª–∞ üò∏"
            elif balans_member == 1:
                balans_member = str(balans_member) + " –ø—Ä–æ—Ñ–±–∞–ª–ª üò∏"
            elif balans_member >= 5:
                balans_member = str(balans_member) + " –ø—Ä–æ—Ñ–±–∞–ª–ª–æ–≤ üò∏"
            else:
                balans_member = "0 –ø—Ä–æ—Ñ–±–∞–ª–ª–æ–≤ üò∏"
            send_message(user_id, f"–ü—Ä–æ—Ñ–∏–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ @id{user_id}\n\n–ë–∞–ª–∞–Ω—Å: {balans_member}")

        if text == "–ø—Ä–æ—Ñ—Ç–µ—Å—Ç":
            game_meny()
            for event in VkLongPoll(session).listen():
                if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                    text = event.text.lower()
                    if text == "4":
                        game_pro(user_id, 4)
                    elif text == "6":
                        game_pro(user_id, 6)
                    elif text == "8":
                        game_pro(user_id, 8)
                    elif text == "10":
                        game_pro(user_id, 10)
                    else:
                        main_meny()
                        break

        if text == "–ø–æ–º–æ—â—å":
            help_meny()

        if text == "—Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è":
            social_meny()
            for event in VkLongPoll(session).listen():
                if event.type == VkEventType.MESSAGE_NEW and event.to_me:
                    text = event.text.lower()
                    if text == "–≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é":
                        break
                    if text == "–∫—Ç–æ –º–æ–∂–µ—Ç –ø–æ–ª—É—á–∏—Ç—å":
                        send_message(user_id, "–§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–π –∑–∞–∫–æ–Ω ‚Ññ 273, —Å—Ç–∞—Ç—å—è 36:\n–ì–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω–∞—è —Å–æ—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç–∏–ø–µ–Ω–¥–∏—è –Ω–∞–∑–Ω–∞—á–∞–µ—Ç—Å—è —Å—Ç—É–¥–µ–Ω—Ç–∞–º, —è–≤–ª—è—é—â–∏–º—Å—è:\n- –¥–µ—Ç—å–º–∏-—Å–∏—Ä–æ—Ç–∞–º–∏ –∏ –¥–µ—Ç—å–º–∏, –æ—Å—Ç–∞–≤—à–∏–º–∏—Å—è –±–µ–∑ –ø–æ–ø–µ—á–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π, –ª–∏—Ü–∞–º–∏ –∏–∑ —á–∏—Å–ª–∞ –¥–µ—Ç–µ–π-—Å–∏—Ä–æ—Ç –∏ –¥–µ—Ç–µ–π, –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –±–µ–∑ –ø–æ–ø–µ—á–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π;\n- –ª–∏—Ü–∞–º–∏, –ø–æ—Ç–µ—Ä—è–≤—à–∏–º–∏ –≤ –ø–µ—Ä–∏–æ–¥ –æ–±—É—á–µ–Ω–∏—è –æ–±–æ–∏—Ö —Ä–æ–¥–∏—Ç–µ–ª–µ–π –∏–ª–∏ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä–æ–¥–∏—Ç–µ–ª—è;\n- –¥–µ—Ç—å–º–∏-–∏–Ω–≤–∞–ª–∏–¥–∞–º–∏, –∏–Ω–≤–∞–ª–∏–¥–∞–º–∏ I –∏ II –≥—Ä—É–ø–ø, –∏–Ω–≤–∞–ª–∏–¥–∞–º–∏ —Å –¥–µ—Ç—Å—Ç–≤–∞;\n- —Å—Ç—É–¥–µ–Ω—Ç–∞–º, –ø–æ–¥–≤–µ—Ä–≥—à–∏–º—Å—è –≤–æ–∑–¥–µ–π—Å—Ç–≤–∏—é —Ä–∞–¥–∏–∞—Ü–∏–∏ –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ—ã –Ω–∞ –ß–µ—Ä–Ω–æ–±—ã–ª—å—Å–∫–æ–π –ê–≠–° –∏ –∏–Ω—ã—Ö —Ä–∞–¥–∏–∞—Ü–∏–æ–Ω–Ω—ã—Ö –∫–∞—Ç–∞—Å—Ç—Ä–æ—Ñ, –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ —è–¥–µ—Ä–Ω—ã—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π –Ω–∞ –°–µ–º–∏–ø–∞–ª–∞—Ç–∏–Ω—Å–∫–æ–º –ø–æ–ª–∏–≥–æ–Ω–µ;\n- —Å—Ç—É–¥–µ–Ω—Ç–∞–º, —è–≤–ª—è—é—â–∏–º—Å—è –∏–Ω–≤–∞–ª–∏–¥–∞–º–∏ –≤—Å–ª–µ–¥—Å—Ç–≤–∏–µ –≤–æ–µ–Ω–Ω–æ–π —Ç—Ä–∞–≤–º—ã –∏–ª–∏ –∑–∞–±–æ–ª–µ–≤–∞–Ω–∏—è, –ø–æ–ª—É—á–µ–Ω–Ω—ã—Ö –≤ –ø–µ—Ä–∏–æ–¥ –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è –≤–æ–µ–Ω–Ω–æ–π —Å–ª—É–∂–±—ã, –∏ –≤–µ—Ç–µ—Ä–∞–Ω–∞–º–∏ –±–æ–µ–≤—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π;\n- —Ç–∞–∫–∂–µ —Å—Ç—É–¥–µ–Ω—Ç–∞–º –∏–∑ —á–∏—Å–ª–∞ –≥—Ä–∞–∂–¥–∞–Ω, –ø—Ä–æ—Ö–æ–¥–∏–≤—à–∏—Ö –≤ —Ç–µ—á–µ–Ω–∏–µ –Ω–µ –º–µ–Ω–µ–µ —Ç—Ä–µ—Ö –ª–µ—Ç –≤–æ–µ–Ω–Ω—É—é —Å–ª—É–∂–±—É –ø–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É;\n- –ø–æ–ª—É—á–∏–≤—à–∏–º –≥–æ—Å—É–¥–∞—Ä—Å—Ç–≤–µ–Ω–Ω—É—é —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–æ–º–æ—â—å.")
                    else:
                        break

        if text == "t":
            send_message(664915953, "I'm working...")

        # if text not in commands_meny:
        #     send_message(user_id, "–ö–æ–º–∞–Ω–¥–∞ –Ω–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω–∞!\n–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞–ø–∏—Å–∞—Ç—å '–º–µ–Ω—é' –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é")

# collection.update_one({"_id": user_id}, {"$inc": {"balance": int(summa)}})
